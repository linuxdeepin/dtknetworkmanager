/*!
@~chinese
@file dactiveconnection.h

@class Dtk::NetworkManager::DActiveConnection dactiveconnection.h
@brief 对于活动连接属性的封装

@fn QList<quint64> DActiveConnection::devices() const;
@brief 获取设备id列表
@return 设备id列表

@fn bool DActiveConnection::vpn() const;
@brief 获取该连接是否是vpn连接
@return 布尔值

@fn quint64 DActiveConnection::connection() const;
@brief 获取该连接对应的连接配置对象的id
@return 连接配置对象的id

@fn quint64 DActiveConnection::DHCP4Config() const;
@brief 获取该连接对应的DHCP4配置对象的id
@return 配置对象的id

@fn quint64 DActiveConnection::DHCP6Config() const;
@brief 获取该连接对应的DHCP6配置对象的id
@return 配置对象的id

@fn quint64 DActiveConnection::IP4Config() const;
@brief 获取该连接对应的IPv4配置对象的id
@return 配置对象的id

@fn quint64 DActiveConnection::IP6Config() const;
@brief 获取该连接对应的IPv6配置对象的id
@return 配置对象的id

@fn QByteArray DActiveConnection::specificObject() const;
@brief 获取该连接对应的连接关联的特殊对象的id
@return 关联对象的id

@fn QString DActiveConnection::connecionId() const;
@brief 获取该连接对应的名称
@note 当连接为无线时和SSID相同
@return 连接的名称

@fn DNMSetting::SettingType DActiveConnection::connectionType() const;
@brief 获取该连接对应的连接的类型
@return 连接的类型

@fn QByteArray DActiveConnection::UUID() const;
@brief 获取该连接对应的连接配置对象的UUID
@return 该连接的UUID

@fn NMActiveConnectionState DActiveConnection::connectionState() const;
@brief 获取该连接对应的连接的状态
@return 连接的状态

@fn void DActiveConnection::devicesChanged(const QList<quint64> &devices);
@brief 信号, 当属性devices改变时被触发

@fn void DActiveConnection::vpnChanged(const bool vpn);
@brief 信号, 当属性vpn改变时被触发

@fn void DActiveConnection::connectionChanged(const quint64 &connection);
@brief 信号, 当属性connection改变时被触发

@fn void DActiveConnection::DHCP4ConfigChanged(const quint64 &config);
@brief 信号, 当属性DHCP4Config改变时被触发

@fn void DActiveConnection::DHCP6ConfigChanged(const quint64 &config);
@brief 信号, 当属性DHCP6Config改变时被触发

@fn void DActiveConnection::IP4ConfigChanged(const quint64 &config);
@brief 信号, 当属性IP4Config改变时被触发

@fn void DActiveConnection::IP6ConfigChanged(const quint64 &config);
@brief 信号, 当属性IP6Config改变时被触发

@fn void DActiveConnection::specificObjectChanged(const QByteArray &specObj);
@brief 信号, 当属性specificObject改变时被触发

@fn void DActiveConnection::connecionIdChanged(const QString &id);
@brief 信号, 当属性connecionId改变时被触发

@fn void DActiveConnection::connectionTypeChanged(const QByteArray &type);
@brief 信号, 当属性connectionType改变时被触发

@fn void DActiveConnection::UUIDChanged(const QByteArray &UUID);
@brief 信号, 当属性UUID改变时被触发
@note 可能该信号没有实际作用

@fn void DActiveConnection::connectionStateChanged(const NMActiveConnectionState state, const NMActiveConnectionStateReason reason);
@brief 信号, 连接状态改变时触发此信号, 可以获得状态和原因

*/
